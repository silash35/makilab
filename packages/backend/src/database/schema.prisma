datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Client {
  id        Int       @id @unique @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt


  name      String
  email     String?
  address   String?
  zip       String?
  whatsapp  String?
  tel       String?
  cpfOrCnpj String?


  serviceOrders ServiceOrder[]
}

model ServiceOrder {
  id Int @id @unique @default(autoincrement())

  equipment          String
  brand              String?
  model              String?
  productNumber      String?
  batchOrImei        String?
  problemDescription String?
  productCondition   String?
  accessories        String?
  listOfServices     String?
  notes              String?

  isUnderWarranty Boolean
  voltage         String
  attendedBy      String
  attendedOn      String


  owner   Client @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId Int

  budget           Budget[]
  isBudgetApproved Boolean?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  registeredInManufacturerAt DateTime?
  budgetedAt                 DateTime?
  budgetAnsweredAt           DateTime?
  partsArrivedAt             DateTime?
  repairedAt                 DateTime?
  deliveredToCustomerAt      DateTime?
}

model Budget {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now())

  name           String
  serviceOrder   ServiceOrder @relation(fields: [serviceOrderId], references: [id], onDelete: Cascade)
  serviceOrderId Int

  itens BudgetItem[]
}

model BudgetItem {
  id        Int      @id @unique @default(autoincrement())
  createdAt DateTime @default(now())

  budget   Budget @relation(fields: [budgetId], references: [id], onDelete: Cascade)
  budgetId Int

  name     String
  price    Int
  quantity Int
}
